// Generated by CoffeeScript 1.9.3
var AddProject, DeleteProject, EditProject, Project, ProjectList;

Project = React.createClass({displayName: "Project",
  render: function() {
    return React.createElement("li", {
      "onClick": this.props.onClick.bind(null, this.props.id),
      "className": "",
      "aria-labelledby": "dropdownMenu"
    }, this.props.name);
  }
});

ProjectList = React.createClass({displayName: "ProjectList",
  getInitialState: function() {
    return {
      data: {
        projects: [],
        current: 0
      }
    };
  },
  "delete": function() {
    var current, projects;
    current = this.state.data.current;
    projects = this.state.data.projects;
    delete projects[current];
    return this.setState({
      data: this.state.data
    });
  },
  changeCurrent: function(id) {
    this.state.data.current = id;
    return this.setState({
      data: this.state.data
    });
  },
  mixins: [Reflux.connect(ProjectStore, 'data')],
  render: function() {
    var current, k, list, project, projects;
    current = this.state.data.current;
    projects = this.state.data.projects;
    list = [];
    for (k in projects) {
      project = projects[k];
      list.push(React.createElement(Project, {
        "id": k,
        "key": k,
        "name": project.name,
        "onClick": this.changeCurrent
      }));
    }
    return React.createElement("div", {
      "className": "dropdown"
    }, React.createElement("button", {
      "className": "btn btn-default dropdown-toggle",
      "type": "button",
      "id": "dropdownMenu",
      "data-toggle": "dropdown",
      "aria-haspopup": "true",
      "aria-expanded": "true"
    }, (projects.length !== 0 ? projects[current].name : void 0), React.createElement("span", {
      "className": "caret"
    })), React.createElement("ul", {
      "className": "dropdown-menu"
    }, list), React.createElement(EditProject, {
      "project": projects[current]
    }), React.createElement(DeleteProject, {
      "handle": this["delete"]
    }), React.createElement(AddProject, null));
  }
});

AddProject = React.createClass({displayName: "AddProject",
  render: function() {
    return React.createElement("a", {
      "data-toggle": "modal",
      "data-target": "#addModal",
      "className": "material-icons"
    }, "add");
  }
});

DeleteProject = React.createClass({displayName: "DeleteProject",
  render: function() {
    console.log(this.props.handle);
    return React.createElement("span", null, React.createElement("a", {
      "data-toggle": "modal",
      "data-target": "#confirmModal",
      "className": "material-icons"
    }, "delete"), React.createElement(DeleteConfirm, {
      "handle": this.props.handle
    }));
  }
});

EditProject = React.createClass({displayName: "EditProject",
  render: function() {
    return React.createElement("a", {
      "data-toggle": "modal",
      "data-target": "#addModal",
      "className": "material-icons"
    }, "edit");
  }
});

React.render(React.createElement(ProjectList, null), document.getElementById('content'));
